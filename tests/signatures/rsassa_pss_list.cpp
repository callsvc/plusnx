#include <security/signatures.h>

int main() {
    Plusnx::Security::Signatures verifier(Plusnx::Security::SignatureOperationType::None);

    // https://stackoverflow.com/questions/66151052/rsa-signature-generated-with-mbedtls-cant-verify-with-c-sharp-bouncycastle-a
    std::array<std::uint8_t, 128> N{0xC2, 0x7E, 0xC0, 0xCD, 0x1B, 0xEA, 0xE1, 0x2E, 0x5F, 0x15, 0xE3, 0x9A, 0xA3, 0x5C, 0xF2, 0x0A, 0xB5, 0xAE, 0x7F, 0x22, 0xE0, 0x8A, 0xA8, 0xA7, 0x44, 0x8E, 0xDD, 0x1F, 0x3C, 0xDD, 0xDA, 0xE5, 0xBB, 0x23, 0x8F, 0xF2, 0xED, 0xFA, 0xDF, 0xC4, 0x95, 0x72, 0x67, 0x00, 0x49, 0xCF, 0xCD, 0xE7, 0x35, 0x56, 0x49, 0xE7, 0x16, 0xCC, 0x5A, 0x9A, 0x37, 0xFA, 0x0C, 0x6B, 0x79, 0xA5, 0x5B, 0x5A, 0x4C, 0x1F, 0x48, 0xE7, 0x62, 0x59, 0xFD, 0x60, 0x4A, 0xCC, 0xFF, 0xB6, 0x62, 0xD2, 0xEB, 0x41, 0xF3, 0xB1, 0xDA, 0x2F, 0x61, 0x55, 0x68, 0xD1, 0x77, 0x7C, 0x16, 0xCA, 0x62, 0x2F, 0xF9, 0x6D, 0x03, 0xED, 0xCF, 0x89, 0x9D, 0x1E, 0x5B, 0xA8, 0x4D, 0x90, 0xDF, 0x80, 0x1B, 0x75, 0xE0, 0x6D, 0xAA, 0x0D, 0x8A, 0xCC, 0xA1, 0x5B, 0xE5, 0xD8, 0xA0, 0x97, 0xFF, 0x75, 0x4B, 0xDA, 0x39, 0x7D};
    std::array<std::uint8_t, 3> E{0x01, 0x00, 0x01};

    verifier.UpdateRsaContext(N, E);

    std::array<std::uint8_t, 32> challenge{0x1E, 0x36, 0x44, 0x82, 0x2A, 0x60, 0x79, 0xDE, 0x7D, 0x49, 0x92, 0xAA, 0x5E, 0x25, 0xB5, 0x80, 0x6D, 0x95, 0x7E, 0xE9, 0x3A, 0x30, 0x9B, 0x7F, 0x82, 0x4B, 0xB0, 0x26, 0x3D, 0x00, 0x0C, 0x2E};
    std::array<std::uint8_t, 128> responseGive{0xA7, 0x64, 0x07, 0xD0, 0x06, 0x35, 0x0E, 0x3F, 0x6C, 0xFB, 0xA1, 0xB8, 0xDC, 0xC5, 0x68, 0x97, 0x65, 0xD5, 0x7A, 0x74, 0xFC, 0x96, 0x01, 0x53, 0xE0, 0x16, 0xBC, 0xCA, 0x59, 0x40, 0x37, 0xC8, 0xC9, 0x89, 0xC2, 0x84, 0x2A, 0xC6, 0x51, 0xCD, 0xDA, 0x29, 0x65, 0xBF, 0x39, 0x68, 0x1E, 0x3A, 0x0E, 0x4E, 0x81, 0x2E, 0xBC, 0x08, 0x41, 0x6A, 0xC8, 0x95, 0xD1, 0x43, 0x35, 0x7C, 0x14, 0xF6, 0x2D, 0xE8, 0xDA, 0x94, 0x6C, 0x80, 0x9D, 0x86, 0x19, 0x4B, 0x16, 0xD3, 0x17, 0xAB, 0x0E, 0x7F, 0xE8, 0x5F, 0xC9, 0xB5, 0xCC, 0x9B, 0x96, 0xE6, 0xAB, 0xB6, 0x7B, 0x11, 0x5B, 0xC8, 0x01, 0xD7, 0x16, 0x50, 0xD3, 0xF8, 0xB4, 0xF5, 0xCB, 0xC2, 0xC4, 0x70, 0xCD, 0x84, 0x50, 0xD0, 0x7F, 0xA9, 0xC3, 0x8F, 0xE1, 0x6B, 0x54, 0xF4, 0x32, 0xB8, 0x6E, 0xCD, 0xD2, 0xCF, 0x78, 0x98, 0x69, 0x7F};

    assert(verifier.VerifyAgainst(challenge, responseGive) == true);

    return {};
}